#! /bin/sh

# Returns the number of processes in the batch system of computer $HO.

HO=${HOST-umea_lab} # computer on which to get running processes
US=${USER-yketa} # username used for the processes (on tp.umu.se)

if [[ "$HO" == umea_lab || "$HO" =~ tp.umu.se ]]; then # processes on computers on tp.umu.se
	CM=${CMD-wstat} # command to get processes
	WA=${WAIT-'33'} # string corresponding to waiting jobs
	CH=${CHAIN-waiting} # string corresponding to chained jobs
elif [[ "$HO" =~ hpc2n ]]; then # processes on computers on supercomputer (HPC2N)
	CM=${CMD-_W} # command to get processes
	WA=${WAIT-'PD'} # string corresponding to waiting jobs
	CH=${CHAIN-'afterok'} # string corresponding to chained jobs
fi

ssh $HO "bash --login -s $HO $US $CM $WA $CH $@ 2> /dev/null" << 'EOF' # executes on $HO (host)

	HO=$1 # host computer
	shift
	US=$1 # user name
	shift
	CM=$1 # process list command
	shift
	WA=$1 # waiting string
	shift
	CH=$1 # chain string
	shift

	> .W # creates file with the running processes
	$CM >> .W

	if [ $# -gt 0 ]; then # check the number of the statuses corresponding to the request

		for req in $@; do
			echo "${req}: `cat .W |\
				( [[ $HO == umea_lab || $HO =~ tp.umu.se ]] && grep $US || cat ) |\
				grep $req | wc -l` (waiting: `cat .W |\
				( [[ $HO == umea_lab || $HO =~ tp.umu.se ]] && grep $US || cat ) |\
				grep $req | grep -w $WA | wc -l`, chained: `cat .W |\
				( [[ $HO == umea_lab || $HO =~ tp.umu.se ]] && grep $US || cat ) |\
				grep $req | grep $CH | wc -l`)" # number of procceses correponding to request
		done

		printf "\n"
	fi

	echo "total: `cat .W |\
		( [[ $HO == umea_lab || $HO =~ tp.umu.se ]] && grep $US || cat ) | wc -l` (waiting: `cat .W |\
		( [[ $HO == umea_lab || $HO =~ tp.umu.se ]] && grep $US || cat ) |\
		grep -w $WA | wc -l`, chained: `cat .W |\
		( [[ $HO == umea_lab || $HO =~ tp.umu.se ]] && grep $US || cat ) |\
		grep $CH | wc -l`)" # total number of processes
	rm .W # erases file

EOF
